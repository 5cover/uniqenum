import { describe, it } from 'node:test';
import assert from 'node:assert/strict';
import * as u from '../src/util.js';

describe('util module', () => {
    it('generatres combinations', () => {
        const c = Array.from(u.combinations(3));
        assert.deepEqual(c, [
            [0, 1],
            [0, 2],
            [1, 2],
        ]);
    });
    it('creates identifiers', () => {
        const expected = [
            'a',
            'b',
            'c',
            'd',
            'e',
            'f',
            'g',
            'h',
            'i',
            'j',
            'k',
            'l',
            'm',
            'n',
            'o',
            'p',
            'q',
            'r',
            's',
            't',
            'u',
            'v',
            'w',
            'x',
            'y',
            'z',
            'A',
            'B',
            'C',
            'D',
            'E',
            'F',
            'G',
            'H',
            'I',
            'J',
            'K',
            'L',
            'M',
            'N',
            'O',
            'P',
            'Q',
            'R',
            'S',
            'T',
            'U',
            'V',
            'W',
            'X',
            'Y',
            'Z',
            'aa',
            'ab',
            'ac',
            'ad',
            'ae',
            'af',
            'ag',
            'ah',
            'ai',
            'aj',
            'ak',
            'al',
            'am',
            'an',
            'ao',
            'ap',
            'aq',
            'ar',
            'as',
            'at',
            'au',
            'av',
            'aw',
            'ax',
            'ay',
            'az',
            'aA',
            'aB',
            'aC',
            'aD',
            'aE',
            'aF',
            'aG',
            'aH',
            'aI',
            'aJ',
            'aK',
            'aL',
            'aM',
            'aN',
            'aO',
            'aP',
            'aQ',
            'aR',
            'aS',
            'aT',
            'aU',
            'aV',
            'aW',
            'aX',
            'aY',
            'aZ',
            'a_',
            'a1',
            'a2',
            'a3',
            'a4',
            'a5',
            'a6',
            'a7',
            'a8',
            'a9',
            'a0',
            'ba',
            'bb',
            'bc',
            'bd',
            'be',
            'bf',
            'bg',
            'bh',
            'bi',
            'bj',
            'bk',
            'bl',
            'bm',
            'bn',
            'bo',
            'bp',
            'bq',
            'br',
            'bs',
            'bt',
            'bu',
            'bv',
            'bw',
            'bx',
            'by',
            'bz',
            'bA',
            'bB',
            'bC',
            'bD',
            'bE',
            'bF',
            'bG',
            'bH',
            'bI',
            'bJ',
            'bK',
            'bL',
            'bM',
            'bN',
            'bO',
            'bP',
            'bQ',
            'bR',
            'bS',
            'bT',
            'bU',
            'bV',
            'bW',
            'bX',
            'bY',
            'bZ',
            'b_',
            'b1',
            'b2',
            'b3',
            'b4',
            'b5',
            'b6',
            'b7',
            'b8',
            'b9',
            'b0',
            'ca',
            'cb',
            'cc',
            'cd',
            'ce',
            'cf',
            'cg',
            'ch',
            'ci',
            'cj',
            'ck',
            'cl',
            'cm',
            'cn',
            'co',
            'cp',
            'cq',
            'cr',
            'cs',
            'ct',
            'cu',
            'cv',
            'cw',
            'cx',
            'cy',
            'cz',
            'cA',
            'cB',
            'cC',
            'cD',
            'cE',
            'cF',
            'cG',
            'cH',
            'cI',
            'cJ',
            'cK',
            'cL',
            'cM',
            'cN',
            'cO',
            'cP',
            'cQ',
            'cR',
            'cS',
            'cT',
            'cU',
            'cV',
            'cW',
            'cX',
            'cY',
            'cZ',
            'c_',
            'c1',
            'c2',
            'c3',
            'c4',
            'c5',
            'c6',
            'c7',
            'c8',
            'c9',
            'c0',
            'da',
            'db',
            'dc',
            'dd',
            'de',
            'df',
            'dg',
            'dh',
            'di',
            'dj',
            'dk',
            'dl',
            'dm',
            'dn',
        ] as const;
        for (let i = 0; i < expected.length; ++i) {
            assert.equal(expected[i], u.ident(i));
        }
    });
});
